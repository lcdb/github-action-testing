on: [push]

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - run: docker pull docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache || true
      - run: docker build . -t img --cache-from=docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache
      - run: docker tag img docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache && docker push docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache || true


  docker-run:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    steps:
      - uses: actions/checkout@v2
      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - run: docker pull docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache
      - run: docker run  docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache conda env list

  conda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: load conda env
        id: cache-env
        uses: actions/cache@v2
        with:
          path: /tmp/env.tar.gz
          key: ${{ hashFiles('requirements-non-r.txt') }}-v1


      - name: build conda env
        if: steps.cache-env.outputs.cache-hit != 'true'
        run: |
          conda config --add channels defaults
          conda config --add channels bioconda
          conda config --add channels conda-forge
          conda install conda-pack
          conda create -p ./env --file requirements-non-r.txt -y
          conda pack -p ./env -o /tmp/env.tar.gz


      - name: conda-unpack
        run: |
          mkdir -p ./env && ( cd ./env && tar -xf /tmp/env.tar.gz )
          ./env/bin/conda-unpack
          eval "$(conda shell.bash hook)"
          source activate ./env
          snakemake -h
